/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.gui;

import client.controller.ActivitateController;
import client.controller.AngajatController;
import db.Activitate;
import db.Angajat;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;



/**
 *
 * @author Razvan
 */
public class ExportFrame extends javax.swing.JFrame {
    private String csvPath = "E:\\IdeeaProiect\\Test";

    /**
     * Creates new form ExportFrame
     */
    public ExportFrame() {
        initComponents();
        
        jDateChooser1.setDate(new Date());
        jDateChooser2.setDate(new Date());
        
        
        setVisible(true);
        setLocationRelativeTo(null);
        setResizable(false);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jDateChooser1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jDateChooser2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("De la:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Pana la:");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.setText("Export");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(jButton1)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79)
                .addComponent(jButton1)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser;
        String choosertitle = "Alege un folder";
        chooser = new JFileChooser(); 
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle(choosertitle);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //
        // disable the "All files" option.
        //
        chooser.setAcceptAllFileFilterUsed(false);
        //    
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
            
            System.out.println("getCurrentDirectory(): "
                    +  chooser.getCurrentDirectory());
            System.out.println("getSelectedFile() : "
                    +  chooser.getSelectedFile());
            
            XSSFWorkbook workbook = new XSSFWorkbook();
            
            Date startDate = jDateChooser1.getDate();
            Date endDate = jDateChooser2.getDate();
            
            if(startDate.after(endDate)){
                JOptionPane.showMessageDialog(null, "Incearca sa pui invers datele");
                return;
            }

            try {
                FileOutputStream out =  new FileOutputStream(new File(chooser.getSelectedFile()+"\\pontaj.xlsx"));
                List<Angajat> angajati = AngajatController.getInstance().getAngajatiByStare("activ");
                for(Angajat a:angajati){
                    XSSFSheet sheet = workbook.createSheet(a.getNume());
                    
                    List<Activitate> pontaje = ActivitateController.getInstance().getActivitatiPerioada(a, startDate, endDate);
                    long sumaDiscutii = 0, sumaSantier = 0, sumaRestul = 0, sumaLiber = 0;
                    
                    for(Activitate p: pontaje){
                        if(p.getCod() == 110100 || p.getCod() == 110200){
                            sumaDiscutii += p.getMinuteMunca()/60;
                        }else{
                            if(p.getCod()/10000 == 13){
                                sumaSantier += p.getMinuteMunca()/60;
                            }else{
                                int x = p.getCod()/10000;
                                if(x == 12 || x == 14 || x == 15 || x == 21){
                                    sumaRestul += p.getMinuteMunca()/60;
                                }
                                if(x == 22 || x == 23 || x == 24){
                                    sumaLiber += p.getMinuteMunca()/60;
                                }
                            }
                        }
                        
                    }
                    
                    Row rowDiscutii = sheet.createRow(0);
                    rowDiscutii.createCell(0).setCellValue("Discutii");
                    rowDiscutii.createCell(1).setCellValue(sumaDiscutii);
                    
                    Row rowSantier = sheet.createRow(1);
                    rowSantier.createCell(0).setCellValue("Santier");
                    rowSantier.createCell(1).setCellValue(sumaSantier);
                    
                    Row rowRestul = sheet.createRow(2);
                    rowRestul.createCell(0).setCellValue("Restul");
                    rowRestul.createCell(1).setCellValue(sumaRestul);
                    
                    Row rowLiber = sheet.createRow(3);
                    rowLiber.createCell(0).setCellValue("Liber");
                    rowLiber.createCell(1).setCellValue(sumaLiber);
                }
                workbook.write(out);
                out.close();
                //System.out.println("Excel with foumula cells written successfully");
                JOptionPane.showMessageDialog(null, "Gata!");
            } catch (FileNotFoundException e) {
                JOptionPane.showMessageDialog(null, "Eroare! Se poate sa incerci sa schimbi un fisier care este deschis!");
                e.printStackTrace();
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Eroare! Se poate sa incerci sa schimbi un fisier care este deschis!");
                e.printStackTrace();
            }
            
        }
        else {
            JOptionPane.showMessageDialog(null, "Nu ai ales nimic!");
        }

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
